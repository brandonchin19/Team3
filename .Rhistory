cat("Mean without removing outliers:", round(m1, 2), "\n")
cat("Mean if we remove outliers:", round(m2, 2), "\n")
}
# response <- readline(prompt="Do you want to remove outliers and to replace with NA? [yes/no]: ")
# if(response == "y" | response == "yes"){
if(rm){
dt[as.character(substitute(var))] <- invisible(var_name)
#assign(as.character(as.list(match.call())$dt), dt, envir = .GlobalEnv)
cat("Outliers successfully removed", "\n")
return(invisible(dt))
} else {
cat("Nothing changed", "\n")
return(invisible(df))
}
}
hmda_ca <- data.frame(read.csv("hmda_ca_new.csv"))
str(hmda_ca)
dim(hmda_ca)
xkabledplyhead(hmda_ca,5)
xkabledplytail(hmda_ca,5)
hmda_ca <- subset(hmda_ca,business_or_commercial_purpose=="2")
str(hmda_ca)
hmda_ca <- subset(hmda_ca,business_or_commercial_purpose=="2")
str(hmda_ca) #48030 obs. of  99 variables
hmda_ca <- subset(hmda_ca,occupancy_type=="1")
dim(hmda_ca) #45735    99
loadPkg("sqldf")
sqldf("select count(distinct(county_code)) from hmda_ca")
unloadPkg("sqldf")
hmda_ca1<-hmda_ca%>%filter(action_taken %in% c("1", "3"))
hmda_ca<-hmda_ca1
dim(hmda_ca) #30661    99
hmda_ca_final <- hmda_ca[c(10,11,12,13,22,24,39,46,50,62,74,78)]
str(hmda_ca_final) #30661 obs. of  13 variables:
unique(hmda_ca_final$applicant_age)
hmda_age<-hmda_ca_final%>%filter(applicant_age !="8888")
unique(hmda_age$applicant_age)
hmda_ca_final<-hmda_age
hmda_ca_final_1 = hmda_ca_final
hmda_ca_final_1$derived_ethnicity = factor(hmda_ca_final$derived_ethnicity)
hmda_ca_final_1$derived_race = factor(hmda_ca_final$derived_race)
hmda_ca_final_1$derived_sex = factor(hmda_ca_final$derived_sex)
#hmda_ca_final_1$action_taken = factor(hmda_ca_final$action_taken)
hmda_ca_final_1$loan_amount = as.numeric(hmda_ca_final$loan_amount)
hmda_ca_final_1$interest_rate = as.numeric(hmda_ca_final$interest_rate)
hmda_ca_final_1$property_value = as.numeric(hmda_ca_final$property_value)
hmda_ca_final_1$income = as.numeric(hmda_ca_final$income)
hmda_ca_final_1$applicant_age = factor(hmda_ca_final$applicant_age)
hmda_ca_final_1$applicant_ethnicity.1=factor(hmda_ca_final$applicant_age)
str(hmda_ca_final_1)
missvalue <- is.na(hmda_ca_final_1)
summary(missvalue)
#There are 26543 observations after we've filtered on all of the relevant fields.
#Missing values are present in interest_rate: 5851; property_value: 596, and income: 205
hmda_ca_final_2 <- hmda_ca_final_1$interest_rate[is.na(hmda_ca_final_1$interest_rate)] <- mean(hmda_ca_final_1$interest_rate, na.rm = TRUE)
hmda_ca_final_2 <- hmda_ca_final_1 %>% drop_na(applicant_ethnicity.1)
hmda_ca_final_2 <- na.omit(hmda_ca_final_1, cols="income")
missvalue1 <- is.na(hmda_ca_final_2)
summary(missvalue1)
#After cleaning out the missing values, we are left with 25,764 observations
options(scipen=9, digits = 3)
Numerical_var <- subset(hmda_ca_final_2,select=c(loan_amount, income, property_value, interest_rate))
library(kableExtra)
summary_t<-kbl(summary(Numerical_var))%>%
kable_styling()
summary_t
library(ggplot2)
ggplot(hmda_ca_final_2, aes(x = factor(derived_sex))) +
geom_bar(color="black", fill="antiquewhite2")+
labs(title="Graph 1. Applicant sex distribution", x="Applicant Sex", y="Count")
ggplot(hmda_ca_final_2, aes(x = factor(applicant_age))) +
geom_bar(color="black", fill="bisque3")+
labs(title="Graph 2. Applicant age distribution", x="Applicant Age", y="Count")
ggplot(hmda_ca_final_2, aes(x = factor(derived_ethnicity))) +
geom_bar(color="black", fill="cornsilk3")+
labs(title="Graph 3. Applicant ethnicity distribution", x="Applicant Ethnicity", y="Count")
ggplot(hmda_ca_final_2, aes(x = factor(action_taken))) +
geom_bar(color="black", fill="azure3")+
labs(title="Graph 4. Action taken distribution", x="Action Taken", y="Count")
ggplot(hmda_ca_final_2, aes(x = factor(derived_race))) +
geom_bar(color="black", fill="azure3")+
labs(title="Graph 5. Derived Race", x="Race of the Applicant", y= "Count")+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(hmda_ca_final_2,aes(x=loan_amount))+
geom_histogram(color="black", fill="steelblue")+
labs(title=" Graph 6. Histogram of Loan Amount", x="Loan Amount in dollars", y="Frequency")
ggplot(hmda_ca_final_2,aes(x=interest_rate))+
geom_histogram(color="black", fill="pink")+
labs(title="Graph 8. Histogram of Interest Rate", x="Interest Rates", y="Frequency")
ggplot(hmda_ca_final_2,aes(x=income))+
geom_histogram(color="black", fill="azure3")+
labs(title="Graph 9. Histogram of Income", x="Income in dollars", y="Frequency")
ggplot(hmda_ca_final_2,aes(x=property_value))+
geom_histogram(color="black", fill="lightblue")+
labs(title="Graph 10. Histogram of Property Values", x="Property Values in dollars", y="Frequency")
qqnorm(hmda_ca_final_2$interest_rate,
main="Graph 11. QQ Plot of Interest Rates",
ylab="Interest Rate",
col="pink")
qqline(hmda_ca_final_2$interest_rate)
qqnorm(hmda_ca_final_2$income,
main="Graph 13. QQ Plot of Income",
ylab="Income",
col="green")
qqline(hmda_ca_final_2$income)
qqnorm(hmda_ca_final_2$property_value,
main="Graph 12. QQ Plot of Property Values",
ylab="Property Value",
col="blue")
qqline(hmda_ca_final_2$property_value)
qqnorm(hmda_ca_final_2$loan_amount,
main="Graph 14.QQ Plot of Loan Amount",
ylab="Loan Amount",
col="purple")
qqline(hmda_ca_final_1$loan_amount)
hmda_ca_final_no_outliers_3 <- outlierKD2(hmda_ca_final_2,interest_rate)
hmda_ca_final_no_outliers_4 <- outlierKD2(hmda_ca_final_no_outliers_3,property_value)
hmda_ca_final_no_outliers_5 <- outlierKD2(hmda_ca_final_no_outliers_4,income)
loans <- outlierKD2(hmda_ca_final_no_outliers_5,loan_amount)
qqnorm(loans$interest_rate,
main="Graph 15. QQ Plot of Interest Rates",
ylab="Interest Rate",
col="pink")
qqline(loans$interest_rate)
qqnorm(loans$property_value,
main="Graph 16. QQ Plot of Property Values",
ylab="Property Value",
col="blue")
qqline(loans$property_value)
qqnorm(loans$income,
main="Graph 17.QQ Plot of Income",
ylab="Income",
col="green")
qqline(loans$income)
qqnorm(loans$loan_amount,
main="Graph 18. QQ Plot of Loan Amount",
ylab="Loan Amount",
col="purple")
qqline(loans$loan_amount)
Numerical_var <- subset(loans,select=c(loan_amount, income, property_value, interest_rate))
#str(Numerical_var)
library(kableExtra)
summary_t<-kbl(summary(Numerical_var))%>%
kable_styling()
summary_t
# GROUP: what's with the NAs in the summary table after we have cleaned the NAs out?
#this chunk is for visual inspection only: EITHER DELETE or FORMAT before the final submission
boxplot(loans$interest_rate)
boxplot(loans$loan_amount)
boxplot(loans$property_value)
boxplot(loans$income)
#library(lattice)
#dim(loans) #28695    12
#pairs(loans) #let's not run this for the final project; doesn't tell us much
#str(loans)
library(epiDisplay)
tab1(loans$derived_race, sort.group = "decreasing", cum.percent = TRUE)
summary(loans$derived_race)
loans$Black<- ifelse(loans$derived_race=="Black or African American", 1, 0)
loans$AIAN<- ifelse(loans$derived_race=="American Indian or Alaska Native", 1, 0)
loans$NHPI<- ifelse(loans$derived_race=="Native Hawaiian or Other Pacific Islander", 1, 0)
loans$Asian<- ifelse(loans$derived_race=="Asian", 1, 0)
loans$Joint<- ifelse(loans$derived_race=="Joint", 1, 0)
loans$N_A<- ifelse(loans$derived_race=="Race Not Available", 1, 0)
loans$two_or<- ifelse(loans$derived_race=="2 or more minority races", 1, 0)
str(loans)
loans_all_num<-loans[c(4:17)]
loans_all_num$applicant_age =as.numeric(loans$applicant_age)
#str(loans_all_num)
cor_loans<-cor(loans_all_num, use="complete.obs")
hmda_down$action_taken<-recode(hmda_down$action_taken, "3"="1", "1"="0")
hmda_down$action_taken<-factor(hmda_down$action_taken)
unique(hmda_down$action_taken)
str(hmda_down)
###using all the variables of interest first
approval_logit <- glm(action_taken ~ derived_race + derived_ethnicity + derived_sex + loan_amount+applicant_age+ income+interest_rate+property_value, data = hmda_down, family = "binomial")
summary(approval_logit)
xkablevif(approval_logit)
hmda_down$action_taken
###using all the variables of interest first
approval_logit <- lm(action_taken ~ derived_race + derived_ethnicity + derived_sex + loan_amount+applicant_age+ income+interest_rate+property_value, data = hmda_down, family = "binomial")
summary(approval_logit)
###using all the variables of interest first
approval_logit <- lm(action_taken ~ derived_race + derived_ethnicity + derived_sex + loan_amount+applicant_age+ income+interest_rate+property_value, data = hmda_down, family = "binomial")
summary(approval_logit)
###using all the variables of interest first
approval_logit <- glm(action_taken ~ derived_race + derived_ethnicity + derived_sex + loan_amount+applicant_age+ income+interest_rate+property_value, data = hmda_down, family = "binomial")
summary(approval_logit)
xkablevif(approval_logit)
hmda_down$action_taken
approvalNullLogit <- glm(action_taken ~ 1, data = hmda_down, family = "binomial")
mcFadden = 1 - logLik(approval_logit)/logLik(approvalNullLogit)
mcFadden
loadPkg("ResourceSelection") # function hoslem.test( ) for logit model evaluation
approveLogitHoslem = hoslem.test(action_taken$hmda_down, fitted(approval_logit)) # Hosmer and Lemeshow test, a chi-squared tests
loadPkg("ResourceSelection") # function hoslem.test( ) for logit model evaluation
approveLogitHoslem = hoslem.test(action_taken$hmda_down, fitted(approval_logit)) # Hosmer and Lemeshow test, a chi-squared tests
# some of common options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
library(ezids)
library(tidyverse)
# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
options(scientific=T, digits = 3)
#options(scipen=9, digits = 3)
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
#' Original outlierKD function by By Klodian Dhana,
#' https://www.r-bloggers.com/identify-describe-plot-and-remove-the-outliers-from-the-dataset/
#' Modified to have third argument for removing outliers instead of interactive prompt,
#' and after removing outlier, original df will not be changed. The function returns the a df,
#' which can be saved as original df name if desired.
#' Also added QQ-plot in the output, with options to show/hide boxplot, histogram, qqplot.
#' Check outliers, and option to remove them, save as a new dataframe.
#' @param df The dataframe.
#' @param var The variable in the dataframe to be checked for outliers
#' @param rm Boolean. Whether to remove outliers or not.
#' @param boxplt Boolean. Whether to show the boxplot, before and after outliers removed.
#' @param histogram Boolean. Whether to show the histogram, before and after outliers removed.
#' @param qqplt Boolean. Whether to show the qqplot, before and after outliers removed.
#' @return The dataframe with outliers replaced by NA if rm==TRUE, or df if nothing changed
#' @examples
#'   outlierKD2(mydf, height, FALSE, TRUE, TRUE, TRUE)
#'   mydf = outlierKD2(mydf, height, TRUE, TRUE, TRUE, TRUE)
#'   mydfnew = outlierKD2(mydf, height, TRUE)
#' @export
outlierKD2 <- function(df, var, rm=TRUE, boxplt=TRUE, histogram=TRUE, qqplt=TRUE) {
dt = df # duplicate the dataframe for potential alteration
var_name <- eval(substitute(var),eval(dt))
na1 <- sum(is.na(var_name))
m1 <- mean(var_name, na.rm = T)
colTotal <- boxplt+histogram+qqplt
par(mfrow=c(2, max(2,colTotal)), oma=c(0,0,3,0)) # fixed issue with only 0 or 1 chart selected
if (qqplt) {
qqnorm(var_name, main = "With outliers")
qqline(var_name)
}
if (histogram) { hist(var_name, main="With outliers", xlab=NA, ylab=NA) }
if (boxplt) { boxplot(var_name, main="With outliers") }
outlier <- boxplot.stats(var_name)$out
mo <- mean(outlier)
var_name <- ifelse(var_name %in% outlier, NA, var_name)
if (qqplt) {
qqnorm(var_name, main = "Without outliers")
qqline(var_name)
}
if (histogram) { hist(var_name, main="Without outliers", xlab=NA, ylab=NA) }
if (boxplt) { boxplot(var_name, main="Without outliers") }
if(colTotal > 0) {  # if no charts are wanted, skip this section
title("Outlier Check", outer=TRUE)
na2 <- sum(is.na(var_name))
cat("Outliers identified:", na2 - na1, "\n")
cat("Propotion (%) of outliers:", round((na2 - na1) / sum(!is.na(var_name))*100, 1), "\n")
cat("Mean of the outliers:", round(mo, 2), "\n")
m2 <- mean(var_name, na.rm = T)
cat("Mean without removing outliers:", round(m1, 2), "\n")
cat("Mean if we remove outliers:", round(m2, 2), "\n")
}
# response <- readline(prompt="Do you want to remove outliers and to replace with NA? [yes/no]: ")
# if(response == "y" | response == "yes"){
if(rm){
dt[as.character(substitute(var))] <- invisible(var_name)
#assign(as.character(as.list(match.call())$dt), dt, envir = .GlobalEnv)
cat("Outliers successfully removed", "\n")
return(invisible(dt))
} else {
cat("Nothing changed", "\n")
return(invisible(df))
}
}
hmda_ca <- data.frame(read.csv("hmda_ca_new.csv"))
str(hmda_ca)
dim(hmda_ca)
xkabledplyhead(hmda_ca,5)
xkabledplytail(hmda_ca,5)
hmda_ca <- subset(hmda_ca,business_or_commercial_purpose=="2")
str(hmda_ca)
hmda_ca <- subset(hmda_ca,business_or_commercial_purpose=="2")
str(hmda_ca) #48030 obs. of  99 variables
hmda_ca <- subset(hmda_ca,occupancy_type=="1")
dim(hmda_ca) #45735    99
loadPkg("sqldf")
sqldf("select count(distinct(county_code)) from hmda_ca")
unloadPkg("sqldf")
hmda_ca1<-hmda_ca%>%filter(action_taken %in% c("1", "3"))
hmda_ca<-hmda_ca1
dim(hmda_ca) #30661    99
hmda_ca_final <- hmda_ca[c(10,11,12,13,22,24,39,46,50,62,74,78)]
str(hmda_ca_final) #30661 obs. of  13 variables:
unique(hmda_ca_final$applicant_age)
hmda_age<-hmda_ca_final%>%filter(applicant_age !="8888")
unique(hmda_age$applicant_age)
hmda_ca_final<-hmda_age
hmda_ca_final_1 = hmda_ca_final
hmda_ca_final_1$derived_ethnicity = factor(hmda_ca_final$derived_ethnicity)
hmda_ca_final_1$derived_race = factor(hmda_ca_final$derived_race)
hmda_ca_final_1$derived_sex = factor(hmda_ca_final$derived_sex)
#hmda_ca_final_1$action_taken = factor(hmda_ca_final$action_taken)
hmda_ca_final_1$loan_amount = as.numeric(hmda_ca_final$loan_amount)
hmda_ca_final_1$interest_rate = as.numeric(hmda_ca_final$interest_rate)
hmda_ca_final_1$property_value = as.numeric(hmda_ca_final$property_value)
hmda_ca_final_1$income = as.numeric(hmda_ca_final$income)
hmda_ca_final_1$applicant_age = factor(hmda_ca_final$applicant_age)
hmda_ca_final_1$applicant_ethnicity.1=factor(hmda_ca_final$applicant_age)
str(hmda_ca_final_1)
missvalue <- is.na(hmda_ca_final_1)
summary(missvalue)
#There are 26543 observations after we've filtered on all of the relevant fields.
#Missing values are present in interest_rate: 5851; property_value: 596, and income: 205
hmda_ca_final_2 <- hmda_ca_final_1$interest_rate[is.na(hmda_ca_final_1$interest_rate)] <- mean(hmda_ca_final_1$interest_rate, na.rm = TRUE)
hmda_ca_final_2 <- hmda_ca_final_1 %>% drop_na(applicant_ethnicity.1)
hmda_ca_final_2 <- na.omit(hmda_ca_final_1, cols="income")
missvalue1 <- is.na(hmda_ca_final_2)
summary(missvalue1)
#After cleaning out the missing values, we are left with 25,764 observations
options(scipen=9, digits = 3)
Numerical_var <- subset(hmda_ca_final_2,select=c(loan_amount, income, property_value, interest_rate))
library(kableExtra)
summary_t<-kbl(summary(Numerical_var))%>%
kable_styling()
summary_t
library(ggplot2)
ggplot(hmda_ca_final_2, aes(x = factor(derived_sex))) +
geom_bar(color="black", fill="antiquewhite2")+
labs(title="Graph 1. Applicant sex distribution", x="Applicant Sex", y="Count")
ggplot(hmda_ca_final_2, aes(x = factor(applicant_age))) +
geom_bar(color="black", fill="bisque3")+
labs(title="Graph 2. Applicant age distribution", x="Applicant Age", y="Count")
ggplot(hmda_ca_final_2, aes(x = factor(derived_ethnicity))) +
geom_bar(color="black", fill="cornsilk3")+
labs(title="Graph 3. Applicant ethnicity distribution", x="Applicant Ethnicity", y="Count")
ggplot(hmda_ca_final_2, aes(x = factor(action_taken))) +
geom_bar(color="black", fill="azure3")+
labs(title="Graph 4. Action taken distribution", x="Action Taken", y="Count")
ggplot(hmda_ca_final_2, aes(x = factor(derived_race))) +
geom_bar(color="black", fill="azure3")+
labs(title="Graph 5. Derived Race", x="Race of the Applicant", y= "Count")+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(hmda_ca_final_2,aes(x=loan_amount))+
geom_histogram(color="black", fill="steelblue")+
labs(title=" Graph 6. Histogram of Loan Amount", x="Loan Amount in dollars", y="Frequency")
ggplot(hmda_ca_final_2,aes(x=interest_rate))+
geom_histogram(color="black", fill="pink")+
labs(title="Graph 8. Histogram of Interest Rate", x="Interest Rates", y="Frequency")
ggplot(hmda_ca_final_2,aes(x=income))+
geom_histogram(color="black", fill="azure3")+
labs(title="Graph 9. Histogram of Income", x="Income in dollars", y="Frequency")
ggplot(hmda_ca_final_2,aes(x=property_value))+
geom_histogram(color="black", fill="lightblue")+
labs(title="Graph 10. Histogram of Property Values", x="Property Values in dollars", y="Frequency")
qqnorm(hmda_ca_final_2$interest_rate,
main="Graph 11. QQ Plot of Interest Rates",
ylab="Interest Rate",
col="pink")
qqline(hmda_ca_final_2$interest_rate)
qqnorm(hmda_ca_final_2$income,
main="Graph 13. QQ Plot of Income",
ylab="Income",
col="green")
qqline(hmda_ca_final_2$income)
qqnorm(hmda_ca_final_2$property_value,
main="Graph 12. QQ Plot of Property Values",
ylab="Property Value",
col="blue")
qqline(hmda_ca_final_2$property_value)
qqnorm(hmda_ca_final_2$loan_amount,
main="Graph 14.QQ Plot of Loan Amount",
ylab="Loan Amount",
col="purple")
qqline(hmda_ca_final_1$loan_amount)
hmda_ca_final_no_outliers_3 <- outlierKD2(hmda_ca_final_2,interest_rate)
hmda_ca_final_no_outliers_4 <- outlierKD2(hmda_ca_final_no_outliers_3,property_value)
hmda_ca_final_no_outliers_5 <- outlierKD2(hmda_ca_final_no_outliers_4,income)
loans <- outlierKD2(hmda_ca_final_no_outliers_5,loan_amount)
qqnorm(loans$interest_rate,
main="Graph 15. QQ Plot of Interest Rates",
ylab="Interest Rate",
col="pink")
qqline(loans$interest_rate)
qqnorm(loans$property_value,
main="Graph 16. QQ Plot of Property Values",
ylab="Property Value",
col="blue")
qqline(loans$property_value)
qqnorm(loans$income,
main="Graph 17.QQ Plot of Income",
ylab="Income",
col="green")
qqline(loans$income)
qqnorm(loans$loan_amount,
main="Graph 18. QQ Plot of Loan Amount",
ylab="Loan Amount",
col="purple")
qqline(loans$loan_amount)
Numerical_var <- subset(loans,select=c(loan_amount, income, property_value, interest_rate))
#str(Numerical_var)
library(kableExtra)
summary_t<-kbl(summary(Numerical_var))%>%
kable_styling()
summary_t
# GROUP: what's with the NAs in the summary table after we have cleaned the NAs out?
#this chunk is for visual inspection only: EITHER DELETE or FORMAT before the final submission
boxplot(loans$interest_rate)
boxplot(loans$loan_amount)
boxplot(loans$property_value)
boxplot(loans$income)
#library(lattice)
#dim(loans) #28695    12
#pairs(loans) #let's not run this for the final project; doesn't tell us much
#str(loans)
library(epiDisplay)
tab1(loans$derived_race, sort.group = "decreasing", cum.percent = TRUE)
summary(loans$derived_race)
loans$Black<- ifelse(loans$derived_race=="Black or African American", 1, 0)
loans$AIAN<- ifelse(loans$derived_race=="American Indian or Alaska Native", 1, 0)
loans$NHPI<- ifelse(loans$derived_race=="Native Hawaiian or Other Pacific Islander", 1, 0)
loans$Asian<- ifelse(loans$derived_race=="Asian", 1, 0)
loans$Joint<- ifelse(loans$derived_race=="Joint", 1, 0)
loans$N_A<- ifelse(loans$derived_race=="Race Not Available", 1, 0)
loans$two_or<- ifelse(loans$derived_race=="2 or more minority races", 1, 0)
str(loans)
loans_all_num<-loans[c(4:17)]
loans_all_num$applicant_age =as.numeric(loans$applicant_age)
#str(loans_all_num)
cor_loans<-cor(loans_all_num, use="complete.obs")
approvalNullLogit <- glm(action_taken ~ 1, data = hmda_down, family = "binomial")
mcFadden = 1 - logLik(approval_logit)/logLik(approvalNullLogit)
mcFadden
loadPkg("ResourceSelection") # function hoslem.test( ) for logit model evaluation
approveLogitHoslem = hoslem.test(action_taken$hmda_down, fitted(approval_logit)) # Hosmer and Lemeshow test, a chi-squared tests
approveLogitHoslem
loadPkg("pROC") # receiver operating characteristic curve, gives the diagnostic ability of a binary classifier system as its discrimination threshold is varied. The curve is on sensitivity/recall/true-positive-rate vs false_alarm/false-positive-rate/fall-out.
prob=predict(approval_logit, type = "response" )
hmda_down$prob=prob
# some of common options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
library(ezids)
library(tidyverse)
# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
options(scientific=T, digits = 3)
#options(scipen=9, digits = 3)
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
#' Original outlierKD function by By Klodian Dhana,
#' https://www.r-bloggers.com/identify-describe-plot-and-remove-the-outliers-from-the-dataset/
#' Modified to have third argument for removing outliers instead of interactive prompt,
#' and after removing outlier, original df will not be changed. The function returns the a df,
#' which can be saved as original df name if desired.
#' Also added QQ-plot in the output, with options to show/hide boxplot, histogram, qqplot.
#' Check outliers, and option to remove them, save as a new dataframe.
#' @param df The dataframe.
#' @param var The variable in the dataframe to be checked for outliers
#' @param rm Boolean. Whether to remove outliers or not.
#' @param boxplt Boolean. Whether to show the boxplot, before and after outliers removed.
#' @param histogram Boolean. Whether to show the histogram, before and after outliers removed.
#' @param qqplt Boolean. Whether to show the qqplot, before and after outliers removed.
#' @return The dataframe with outliers replaced by NA if rm==TRUE, or df if nothing changed
#' @examples
#'   outlierKD2(mydf, height, FALSE, TRUE, TRUE, TRUE)
#'   mydf = outlierKD2(mydf, height, TRUE, TRUE, TRUE, TRUE)
#'   mydfnew = outlierKD2(mydf, height, TRUE)
#' @export
outlierKD2 <- function(df, var, rm=TRUE, boxplt=TRUE, histogram=TRUE, qqplt=TRUE) {
dt = df # duplicate the dataframe for potential alteration
var_name <- eval(substitute(var),eval(dt))
na1 <- sum(is.na(var_name))
m1 <- mean(var_name, na.rm = T)
colTotal <- boxplt+histogram+qqplt
par(mfrow=c(2, max(2,colTotal)), oma=c(0,0,3,0)) # fixed issue with only 0 or 1 chart selected
if (qqplt) {
qqnorm(var_name, main = "With outliers")
qqline(var_name)
}
if (histogram) { hist(var_name, main="With outliers", xlab=NA, ylab=NA) }
if (boxplt) { boxplot(var_name, main="With outliers") }
outlier <- boxplot.stats(var_name)$out
mo <- mean(outlier)
var_name <- ifelse(var_name %in% outlier, NA, var_name)
if (qqplt) {
qqnorm(var_name, main = "Without outliers")
qqline(var_name)
}
if (histogram) { hist(var_name, main="Without outliers", xlab=NA, ylab=NA) }
if (boxplt) { boxplot(var_name, main="Without outliers") }
if(colTotal > 0) {  # if no charts are wanted, skip this section
title("Outlier Check", outer=TRUE)
na2 <- sum(is.na(var_name))
cat("Outliers identified:", na2 - na1, "\n")
cat("Propotion (%) of outliers:", round((na2 - na1) / sum(!is.na(var_name))*100, 1), "\n")
cat("Mean of the outliers:", round(mo, 2), "\n")
m2 <- mean(var_name, na.rm = T)
cat("Mean without removing outliers:", round(m1, 2), "\n")
cat("Mean if we remove outliers:", round(m2, 2), "\n")
}
# response <- readline(prompt="Do you want to remove outliers and to replace with NA? [yes/no]: ")
# if(response == "y" | response == "yes"){
if(rm){
dt[as.character(substitute(var))] <- invisible(var_name)
#assign(as.character(as.list(match.call())$dt), dt, envir = .GlobalEnv)
cat("Outliers successfully removed", "\n")
return(invisible(dt))
} else {
cat("Nothing changed", "\n")
return(invisible(df))
}
}
hmda_ca <- data.frame(read.csv("hmda_ca_new.csv"))
str(hmda_ca)
dim(hmda_ca)
xkabledplyhead(hmda_ca,5)
xkabledplytail(hmda_ca,5)
hmda_ca <- subset(hmda_ca,business_or_commercial_purpose=="2")
str(hmda_ca)
